---
- name: Initialize Pi
  hosts: node1
  become: true
  become_user: root
  vars:
    factoryuser: pi
    # Replace 'cluster_key' with your public key file name
    ssh_key_file_name: cluster_key
  vars_prompt:
    - name: setdefaultpass
      prompt: Set a new password for the factory default account
      private: no
    - name: setusername
      prompt: Enter a username
      private: no
    - name: setuserpass
      prompt: Enter a password
      private: no
  tasks:
    - name: Create new user & assign roles
      ansible.builtin.user:
        name: "{{ setusername }}"
        password: "{{ setuserpass|password_hash('sha512') }}"
        groups: "sudo, adm"

    - name: Edit sudoers config
      ansible.builtin.lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^%sudo="
        line: "%sudo ALL=(ALL) NOPASSWD: ALL"
        validate: /usr/sbin/visudo -cf %s

    - name: Set SSH key from file for created user {{ setusername }}
      ansible.posix.authorized_key:
        user: "{{ setusername }}"
        state: present
        key: "{{ lookup('file', './keys/{{ssh_key_file_name}}.pub') }}"

    - name: Change default password
      user:
        name: pi
        update_password: always
        password: "{{ setdefaultpass|password_hash('sha512') }}"

    - name: Lock the factory default user
      ansible.builtin.shell: sudo passwd -l {{ factoryuser }}

    - name: Install unattended upgrades
      ansible.builtin.package:
        name: unattended-upgrades
        state: present

    - name: Copy unattended upgrades config file
      ansible.builtin.copy:
        src: ./files/50unattended-upgrades
        dest: /etc/apt/apt.conf.d/50unattended-upgrades
        owner: root
        group: root
        mode: "0644"
        backup: yes

    - name: Disable Wi-Fi
      ansible.builtin.systemd:
        name: wpa_supplicant.service
        state: stopped
        enabled: no

    - name: Disable Bluetooth
      ansible.builtin.systemd:
        name: bluetooth.service
        state: stopped
        enabled: no

    - name: Install UFW
      ansible.builtin.package:
        name: ufw
        state: present

    - name: Enable UFW logging
      community.general.ufw:
        logging: "on"

    - name: (UFW) enable OpenSSH
      community.general.ufw:
        rule: allow
        name: OpenSSH

    - name: (UFW) enable K3s
      community.general.ufw:
        rule: allow
        port: "6443"
        comment: K3s

    - name: Deny everything and enable UFW
      community.general.ufw:
        state: enabled
        policy: deny
